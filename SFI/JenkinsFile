#!/usr/bin/env groovy

pipeline {
    agent {
        label 'master'
    }

    parameters {
        string( name: 'BRANCH_NAME',
                description: 'Nome da branch que ser&#225; executada a build da aplica&#231;&#227;o. Ex.: RB_GEVO-1234',
                defaultValue: '',
                trim: true)
        choice(name: 'Ambiente',   description: 'Informe o ambiente de deploy', choices: ['QA','Homolog','PRD'])        
    }

    environment{
        solution_name = 'SEFAT.sln'
        assembly_name_hml = 'SFI - Homolog_CIT'
        assembly_name_prd = 'SEFAT - Sistema de Faturamento - v.4.0'
        path_hml = '\\\\ISS001W2PAS04\\Sistemas\\SEFAT\\HOMOLOGACAO\\SFI_CIT'
        path_prd = '\\\\ISS001W2PAS04\Sistemas\SEFAT\PRE-PROD\SFI'
        server_domain = '\\\\iss001w2pas04'

        //repositorio_gndi_ci = "C:\\git_jrneto\\JenkinsFile"
        //repositorio_gndi_svn = "C:\\SVN\\SEFAT\\SFI\\branches"
        repositorio_gndi_ci = "${env.WORKSPACE}\\SFI\\cit-gndi-ci"
        repositorio_gndi_svn = "${env.WORKSPACE}\\cit-gndi-svn-branches"
        local_branch = "${repositorio_gndi_svn}\\${params.BRANCH_NAME}"
        remote_url = "https://192.168.20.242/svn/SEFAT/SFI/branches/${params.BRANCH_NAME}"

        build_solution = "${env.local_branch}\\${env.solution_name}"
        build_arguments_hml = "/t:Publish /p:configuration=Debug /p:UpdateURL=\"${env.path_hml}\" /p:assemblyname=\"${env.assembly_name_hml}\" /m:4 /v:quiet"
        build_arguments_prd = "/t:Publish /p:configuration=Debug /p:UpdateURL=\"${env.path_prd}\" /p:assemblyname=\"${env.assembly_name_prd}\" /m:4 /v:quiet"

        local_output_path = "${env.local_branch}\\bin\\Debug\\app.publish\\" 
	}
    
    stages {
      
      
        stage('Checkout SVN - Branch'){            
            steps{
                dir(env.repositorio_gndi_svn){
                    
                    checkout( changelog: false, 
                                   poll: false, 
                                   scm: [ $class: 'SubversionSCM', 
                                          additionalCredentials: [], 
                                          excludedCommitMessages: '', 
                                          excludedRegions: '', 
                                          excludedRevprop: '', 
                                          excludedUsers: '', 
                                          filterChangelog: false, 
                                          ignoreDirPropChanges: false, 
                                          includedRegions: '', 
                                          locations: [[cancelProcessOnExternalsFail: true, 
                                                       credentialsId: 'svnCredential', 
                                                       depthOption: 'infinity', 
                                                       ignoreExternalsOption: true, 
                                                       remote: "${env.remote_url}"]], 
                                          quietOperation: true, 
                                          workspaceUpdater: [$class: 'UpdateWithCleanUpdater']] )                                       
                }
            }
        }
        stage('Valida Versão Aplicação'){
            steps{
                echo 'TODO Validando versão...'
                echo 'Versão PRD: XXX'
                echo 'Versão Deploy: XXX + 1'
                
            }
        }
        
        
        stage('Build') {
            steps{
                dir(env.local_branch){  
                    script {
                        echo "### ${params.Ambiente}"
                        if ("${params.Ambiente}" == 'PRD') {  
                            echo "### PRD ###"                             
                            bat """                                             
                                MSBuild.exe \"${env.build_solution}\" ${env.build_arguments_prd}                    
                                """        
                        } else {
                             echo "### HOMOLOG ###"
                             bat """                                             
                                MSBuild.exe \"${env.build_solution}\" ${env.build_arguments_hml}                    
                                """ 
                        }
                        
                    }                  
                    
                }
            }
        }
        stage('Deploy') {
            steps{
                dir("${env.local_output_path}"){
                    withCredentials([usernamePassword(credentialsId: 'svnCredential', passwordVariable: 'PASSWORD', usernameVariable: 'USER')]) {
                        
                        bat """
                            net use ${env.server_domain} /u:%USER% %PASSWORD%
                            """
                        echo "====++++Inicio copia++++===="
                        fileOperations([
                            fileCopyOperation(
                                excludes: "**/${env.assembly_name_hml}.exe", 
                                flattenFiles: false, 
                                includes: "**/*", 
                                targetLocation: "${env.path_hml}")
                        ])
                        echo "====++++Fim copia++++===="
                    }
                }
            }
        }
        /*
        stage('Build & Sonar') {
            steps{
                bat """ 
                   SonarScanner.MSBuild.exe begin /k:\"SFI\" /d:sonar.host.url=\"http://localhost:9000\" /d:sonar.login=\"e87117cfbcc7251ffd0ab3f2716d7e12d6ec5d2c\"
                   MSBuild.exe \"${env.build_solution}\" ${env.build_arguments}
                   SonarScanner.MSBuild.exe\" end
                    """
            }
        }
        */
    }
    post {
        always {
            echo "Build nro. ${env.BUILD_NUMBER} finalizada!"
        }
        success {
            echo "O build da branch ${params.BRANCH_NAME} foi realizado com sucesso!"
        }
        failure {
            echo "Falha no processo de build. Analise o console log do build ${env.BUILD_NUMBER}"
        }
    }
}
