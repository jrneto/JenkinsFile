#!/usr/bin/env groovy

pipeline {
    agent {
        label 'master'
    }

    parameters {
        string( name: 'BRANCH_NAME',
                description: 'Nome da branch que ser&#225; executada a build da aplica&#231;&#227;o. Ex.: RB_GEVO-1234',
                defaultValue: '',
                trim: true)
    }

    environment{
        solution_name = 'SEFAT.sln'
        assembly_name_hml = 'SFI - Homolog_CIT'
        assembly_name_prd = 'SEFAT - Sistema de Faturamento - v.4.0'
        path_hml = '\\\\ISS001W2PAS04\\Sistemas\\SEFAT\\HOMOLOGACAO\\SFI_CIT'
        path_prd = '\\\\ISS001W2PAS04\\Sistemas\\SEFAT\\Executaveis\\SEFAT_FW4'

        //repositorio_gndi_ci = "C:\\git_jrneto\\JenkinsFile"
        //repositorio_gndi_svn = "C:\\SVN\\SEFAT\\SFI\\branches"
        repositorio_gndi_ci = "${env.WORKSPACE}\\SFI\\cit-gndi-ci"
        repositorio_gndi_svn = "${env.WORKSPACE}\\cit-gndi-svn-branches"
        local_branch = "${repositorio_gndi_svn}\\${params.BRANCH_NAME}"
        remote_url = "https://192.168.20.242/svn/SEFAT/SFI/branches/${params.BRANCH_NAME}"

        build_solution = "${env.local_branch}\\${env.solution_name}"
        build_arguments = "/t:Publish /p:configuration=Release /p:InstallURL=\"${env.path_hml}\" /p:assemblyname=\"${env.assembly_name_hml}\" /m:4 /v:quiet"
	}

    stages {
        //stage('Checkout GIT - CI'){
        //    steps{
        //        dir(env.repositorio_gndi_ci){
        //            checkout(   changelog: false, 
        //                        poll: false, 
        //                        scm: [ $class: 'GitSCM', 
        //                                branches: [[name: '*/master']], 
        //                                doGenerateSubmoduleConfigurations: false, 
        //                               extensions: [[$class: 'CloneOption', noTags: true, reference: '', shallow: true]],
        //                                userRemoteConfigs: [[credentialsId: 'myGitCredential', url: 'https://github.com/jrneto/JenkinsFile.git']]])
        //            
        //        }
        //    }
        //}
    /*
	stage('Test') {
            steps {
                echo 'Testing1...'
            }
        }    
	    
        stage('Checkout GIT - CI'){
            steps{
                 dir(env.repositorio_gndi_ci){
                     git branch: 'master',
                         credentialsId: 'myGitCredential',
                         url: 'https://github.com/jrneto/JenkinsFile.git'
                 } 
            }
        }
        */
        stage('Checkout SVN - Branch'){            
            steps{
                dir(env.repositorio_gndi_svn){
                    
                    checkout( changelog: false, 
                                   poll: false, 
                                   scm: [ $class: 'SubversionSCM', 
                                          additionalCredentials: [], 
                                          excludedCommitMessages: '', 
                                          excludedRegions: '', 
                                          excludedRevprop: '', 
                                          excludedUsers: '', 
                                          filterChangelog: false, 
                                          ignoreDirPropChanges: false, 
                                          includedRegions: '', 
                                          locations: [[cancelProcessOnExternalsFail: true, 
                                                       credentialsId: 'svnCredential', 
                                                       depthOption: 'infinity', 
                                                       ignoreExternalsOption: true, 
                                                       remote: "${env.remote_url}"]], 
                                          quietOperation: true, 
                                          workspaceUpdater: [$class: 'UpdateWithCleanUpdater']] )                                       
                }
            }
        }
        stage('Valida Versão Aplicação'){
            steps{
                echo 'TODO Validando versão...'
                echo 'Versão PRD: XXX'
                echo 'Versão Deploy: XXX + 1'
            }
        }
        
        
        stage('Build e Deploy') {
            steps{
                dir(env.local_branch){
                    bat """                     
                        MSBuild.exe \"${env.build_solution}\" ${env.build_arguments}                    
                        """
                }
            }
        }
        /*stage('Build & Sonar') {
            steps{
                bat """ 
                    \"${tool 'Scanner MsBuild 5'}\\SonarScanner.MSBuild.exe\" begin /k:\"SFI\" /v:${params.BRANCH_NAME}
                    \"${tool 'Msbuild 2017'}\\MSBuild.exe\" \"${env.build_solution}\" ${env.build_arguments}
                    \"${tool 'Scanner MsBuild 5'}\\SonarScanner.MSBuild.exe\" end
                    """
            }
        }*/
    }
    post {
        always {
            echo "Build nro. ${env.BUILD_NUMBER} finalizada!"
        }
        success {
            echo "O build da branch ${params.BRANCH_NAME} foi realizado com sucesso!"
        }
        failure {
            echo "Falha no processo de build. Analise o console log do build ${env.BUILD_NUMBER}"
        }
    }
}
